import fetch from 'node-fetch'

let handler = async (m, { text, usedPrefix, command, conn }) => {
  if (!text) {
    return m.reply(
      `Usage:\n${usedPrefix + command} <username>\n` +
      `Example: ${usedPrefix + command} shirokami_ryzen\n` +
      `Please provide a TikTok username, nya~ (‚âßœâ‚â¶)„Çû`
    );
  }

  try {
    await m.reply(wait);
    const url = `${APIs.ryzumi}/api/stalk/tiktok?username=${encodeURIComponent(text)}`;
    const res = await fetch(url, { headers: { accept: 'application/json' } });
    if (!res.ok) throw new Error(`Request failed (${res.status})`);
    const data = await res.json();

    const u = data?.userInfo;
    if (!u) return m.reply(`Username not found or API error‚Ä¶ gomen~ (‚ï•Ôπè‚ï•)`);

    const followers = (u.totalFollowers ?? 0).toLocaleString('en-US');
    const following = (u.totalFollowing ?? 0).toLocaleString('en-US');
    const likes     = (u.totalLikes ?? 0).toLocaleString('en-US');
    const videos    = (u.totalVideos ?? 0).toLocaleString('en-US');
    const friends   = (u.totalFriends ?? 0).toLocaleString('en-US');

    // Plain-text caption (no markdown) so URLs & symbols stay clean
    let caption = `‰πÇ  T T  S T A L K E R  ‚Äî  P R O F I L E\n\n`;
    caption += `‚ï≠‚îÄ‚ùí User Info\n`;
    caption += `‚îÇ‚ó¶ Username : ${u.username}\n`;
    caption += `‚îÇ‚ó¶ Name : ${u.name || '-'}\n`;
    caption += `‚îÇ‚ó¶ ID : ${u.id}\n`;
    caption += `‚îÇ‚ó¶ Bio : ${u.bio || '-'}\n`;
    caption += `‚îÇ‚ó¶ Verified : ${u.verified ? 'Yes' : 'No'}\n`;
    caption += `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`;
    caption += `‚ï≠‚îÄ‚ùí Statistics\n`;
    caption += `‚îÇ‚ó¶ Followers : ${followers}\n`;
    caption += `‚îÇ‚ó¶ Following : ${following}\n`;
    caption += `‚îÇ‚ó¶ Likes : ${likes}\n`;
    caption += `‚îÇ‚ó¶ Videos : ${videos}\n`;
    caption += `‚îÇ‚ó¶ Friends : ${friends}\n`;
    caption += `‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`;
    caption += `üîó Profile: https://tiktok.com/@${u.username}\n\n`;
    caption += `(*/œâÔºº*) Here you go~ nya! ‚ú®`;

    await conn.sendMessage(
      m.chat,
      {
        image: { url: u.avatar },
        caption, // plain text
      },
      { quoted: m }
    );
  } catch (e) {
    console.error(e);
    m.reply(`Couldn't fetch that username‚Ä¶ gomen~ (‚ï•Ôπè‚ï•)\nReason: ${e?.message || e}`);
  }
};

handler.help = ['ttstalk'];
handler.tags = ['stalk'];
handler.command = /^(ttstalk|tiktokstalk)$/i;

handler.register = true
handler.limit = true

export default handler
